// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import api "github.com/mochammadshenna/aplikasi-po/model/api"
import context "context"
import mock "github.com/stretchr/testify/mock"

// PoService is an autogenerated mock type for the PoService type
type PoService struct {
	mock.Mock
}

// DeletePurchaseOrder provides a mock function with given fields: ctx, request
func (_m *PoService) DeletePurchaseOrder(ctx context.Context, request api.DeletePurchaseOrderRequest) {
	_m.Called(ctx, request)
}

// FindAllPurchaseOrder provides a mock function with given fields: ctx
func (_m *PoService) FindAllPurchaseOrder(ctx context.Context) (api.FindAllPurchaceOrderRepsonse, error) {
	ret := _m.Called(ctx)

	var r0 api.FindAllPurchaceOrderRepsonse
	if rf, ok := ret.Get(0).(func(context.Context) api.FindAllPurchaceOrderRepsonse); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(api.FindAllPurchaceOrderRepsonse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindFinishingFactory provides a mock function with given fields: ctx, request
func (_m *PoService) FindFinishingFactory(ctx context.Context, request api.FindFactoryByIdRequest) api.FindFinishingFactoryResponse {
	ret := _m.Called(ctx, request)

	var r0 api.FindFinishingFactoryResponse
	if rf, ok := ret.Get(0).(func(context.Context, api.FindFactoryByIdRequest) api.FindFinishingFactoryResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(api.FindFinishingFactoryResponse)
	}

	return r0
}

// FindProductionFactory provides a mock function with given fields: ctx, request
func (_m *PoService) FindProductionFactory(ctx context.Context, request api.FindFactoryByIdRequest) api.FindProductionFactoryResponse {
	ret := _m.Called(ctx, request)

	var r0 api.FindProductionFactoryResponse
	if rf, ok := ret.Get(0).(func(context.Context, api.FindFactoryByIdRequest) api.FindProductionFactoryResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(api.FindProductionFactoryResponse)
	}

	return r0
}

// FindPurchaseOrderById provides a mock function with given fields: ctx, request
func (_m *PoService) FindPurchaseOrderById(ctx context.Context, request api.FindPurchaseOrderByIdRequest) api.FindPurchaseOrderResponse {
	ret := _m.Called(ctx, request)

	var r0 api.FindPurchaseOrderResponse
	if rf, ok := ret.Get(0).(func(context.Context, api.FindPurchaseOrderByIdRequest) api.FindPurchaseOrderResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(api.FindPurchaseOrderResponse)
	}

	return r0
}

// SavePurchaseOrder provides a mock function with given fields: ctx, request
func (_m *PoService) SavePurchaseOrder(ctx context.Context, request api.SavePurchaseOrderRequest) (api.SavePurchaseOrderResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 api.SavePurchaseOrderResponse
	if rf, ok := ret.Get(0).(func(context.Context, api.SavePurchaseOrderRequest) api.SavePurchaseOrderResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(api.SavePurchaseOrderResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, api.SavePurchaseOrderRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePurchaseOrder provides a mock function with given fields: ctx, request
func (_m *PoService) UpdatePurchaseOrder(ctx context.Context, request api.UpdatePurchaseOrderRequest) (api.UpdatePurchaseOrderResponse, error) {
	ret := _m.Called(ctx, request)

	var r0 api.UpdatePurchaseOrderResponse
	if rf, ok := ret.Get(0).(func(context.Context, api.UpdatePurchaseOrderRequest) api.UpdatePurchaseOrderResponse); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(api.UpdatePurchaseOrderResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, api.UpdatePurchaseOrderRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
